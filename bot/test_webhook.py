#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook endpoints
"""

import asyncio
import aiohttp
import json

async def test_webhook_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ webhook endpoints"""
    
    base_url = "http://localhost:8000"
    
    async with aiohttp.ClientSession() as session:
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoints...")
        
        # –¢–µ—Å—Ç 1: –ö–æ—Ä–Ω–µ–≤–æ–π endpoint
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π endpoint (/)")
        try:
            async with session.get(f"{base_url}/") as response:
                print(f"   –°—Ç–∞—Ç—É—Å: {response.status}")
                text = await response.text()
                print(f"   –û—Ç–≤–µ—Ç: {text}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 2: Health endpoint
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º health endpoint (/health)")
        try:
            async with session.get(f"{base_url}/health") as response:
                print(f"   –°—Ç–∞—Ç—É—Å: {response.status}")
                data = await response.json()
                print(f"   –û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 3: Webhook endpoint (GET)
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoint GET (/webhook)")
        try:
            async with session.get(f"{base_url}/webhook") as response:
                print(f"   –°—Ç–∞—Ç—É—Å: {response.status}")
                if response.status == 405:
                    print(f"   ‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç: Method Not Allowed (GET –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)")
                else:
                    text = await response.text()
                    print(f"   –û—Ç–≤–µ—Ç: {text}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 4: Webhook endpoint (POST)
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoint POST (/webhook)")
        test_data = {
            "test": "data",
            "message": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π webhook –∑–∞–ø—Ä–æ—Å",
            "timestamp": "2025-01-27T12:00:00Z"
        }
        
        try:
            async with session.post(
                f"{base_url}/webhook",
                json=test_data,
                headers={"Content-Type": "application/json"}
            ) as response:
                print(f"   –°—Ç–∞—Ç—É—Å: {response.status}")
                if response.status == 200:
                    try:
                        data = await response.json()
                        print(f"   –û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
                    except:
                        text = await response.text()
                        print(f"   –û—Ç–≤–µ—Ç: {text}")
                else:
                    print(f"   –û—Ç–≤–µ—Ç: {response.status} - {response.reason}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 5: Webhook endpoint (PUT)
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoint PUT (/webhook)")
        try:
            async with session.put(f"{base_url}/webhook") as response:
                print(f"   –°—Ç–∞—Ç—É—Å: {response.status}")
                if response.status == 405:
                    print(f"   ‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç: Method Not Allowed (PUT –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)")
                else:
                    text = await response.text()
                    print(f"   –û—Ç–≤–µ—Ç: {text}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\nüìù –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print("   - /: 200 OK")
        print("   - /health: 200 OK —Å JSON")
        print("   - /webhook GET: 405 Method Not Allowed")
        print("   - /webhook POST: 200 OK (–µ—Å–ª–∏ —ç—Ç–æ Telegram webhook)")
        print("   - /webhook PUT: 405 Method Not Allowed")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook endpoints...")
    print("‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8000")
    print("=" * 50)
    
    asyncio.run(test_webhook_endpoints())
